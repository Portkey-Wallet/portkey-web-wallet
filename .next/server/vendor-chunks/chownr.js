"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/chownr";
exports.ids = ["vendor-chunks/chownr"];
exports.modules = {

/***/ "(ssr)/./node_modules/chownr/chownr.js":
/*!***************************************!*\
  !*** ./node_modules/chownr/chownr.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst fs = __webpack_require__(/*! fs */ \"fs\")\nconst path = __webpack_require__(/*! path */ \"path\")\n\n/* istanbul ignore next */\nconst LCHOWN = fs.lchown ? 'lchown' : 'chown'\n/* istanbul ignore next */\nconst LCHOWNSYNC = fs.lchownSync ? 'lchownSync' : 'chownSync'\n\n/* istanbul ignore next */\nconst needEISDIRHandled = fs.lchown &&\n  !process.version.match(/v1[1-9]+\\./) &&\n  !process.version.match(/v10\\.[6-9]/)\n\nconst lchownSync = (path, uid, gid) => {\n  try {\n    return fs[LCHOWNSYNC](path, uid, gid)\n  } catch (er) {\n    if (er.code !== 'ENOENT')\n      throw er\n  }\n}\n\n/* istanbul ignore next */\nconst chownSync = (path, uid, gid) => {\n  try {\n    return fs.chownSync(path, uid, gid)\n  } catch (er) {\n    if (er.code !== 'ENOENT')\n      throw er\n  }\n}\n\n/* istanbul ignore next */\nconst handleEISDIR =\n  needEISDIRHandled ? (path, uid, gid, cb) => er => {\n    // Node prior to v10 had a very questionable implementation of\n    // fs.lchown, which would always try to call fs.open on a directory\n    // Fall back to fs.chown in those cases.\n    if (!er || er.code !== 'EISDIR')\n      cb(er)\n    else\n      fs.chown(path, uid, gid, cb)\n  }\n  : (_, __, ___, cb) => cb\n\n/* istanbul ignore next */\nconst handleEISDirSync =\n  needEISDIRHandled ? (path, uid, gid) => {\n    try {\n      return lchownSync(path, uid, gid)\n    } catch (er) {\n      if (er.code !== 'EISDIR')\n        throw er\n      chownSync(path, uid, gid)\n    }\n  }\n  : (path, uid, gid) => lchownSync(path, uid, gid)\n\n// fs.readdir could only accept an options object as of node v6\nconst nodeVersion = process.version\nlet readdir = (path, options, cb) => fs.readdir(path, options, cb)\nlet readdirSync = (path, options) => fs.readdirSync(path, options)\n/* istanbul ignore next */\nif (/^v4\\./.test(nodeVersion))\n  readdir = (path, options, cb) => fs.readdir(path, cb)\n\nconst chown = (cpath, uid, gid, cb) => {\n  fs[LCHOWN](cpath, uid, gid, handleEISDIR(cpath, uid, gid, er => {\n    // Skip ENOENT error\n    cb(er && er.code !== 'ENOENT' ? er : null)\n  }))\n}\n\nconst chownrKid = (p, child, uid, gid, cb) => {\n  if (typeof child === 'string')\n    return fs.lstat(path.resolve(p, child), (er, stats) => {\n      // Skip ENOENT error\n      if (er)\n        return cb(er.code !== 'ENOENT' ? er : null)\n      stats.name = child\n      chownrKid(p, stats, uid, gid, cb)\n    })\n\n  if (child.isDirectory()) {\n    chownr(path.resolve(p, child.name), uid, gid, er => {\n      if (er)\n        return cb(er)\n      const cpath = path.resolve(p, child.name)\n      chown(cpath, uid, gid, cb)\n    })\n  } else {\n    const cpath = path.resolve(p, child.name)\n    chown(cpath, uid, gid, cb)\n  }\n}\n\n\nconst chownr = (p, uid, gid, cb) => {\n  readdir(p, { withFileTypes: true }, (er, children) => {\n    // any error other than ENOTDIR or ENOTSUP means it's not readable,\n    // or doesn't exist.  give up.\n    if (er) {\n      if (er.code === 'ENOENT')\n        return cb()\n      else if (er.code !== 'ENOTDIR' && er.code !== 'ENOTSUP')\n        return cb(er)\n    }\n    if (er || !children.length)\n      return chown(p, uid, gid, cb)\n\n    let len = children.length\n    let errState = null\n    const then = er => {\n      if (errState)\n        return\n      if (er)\n        return cb(errState = er)\n      if (-- len === 0)\n        return chown(p, uid, gid, cb)\n    }\n\n    children.forEach(child => chownrKid(p, child, uid, gid, then))\n  })\n}\n\nconst chownrKidSync = (p, child, uid, gid) => {\n  if (typeof child === 'string') {\n    try {\n      const stats = fs.lstatSync(path.resolve(p, child))\n      stats.name = child\n      child = stats\n    } catch (er) {\n      if (er.code === 'ENOENT')\n        return\n      else\n        throw er\n    }\n  }\n\n  if (child.isDirectory())\n    chownrSync(path.resolve(p, child.name), uid, gid)\n\n  handleEISDirSync(path.resolve(p, child.name), uid, gid)\n}\n\nconst chownrSync = (p, uid, gid) => {\n  let children\n  try {\n    children = readdirSync(p, { withFileTypes: true })\n  } catch (er) {\n    if (er.code === 'ENOENT')\n      return\n    else if (er.code === 'ENOTDIR' || er.code === 'ENOTSUP')\n      return handleEISDirSync(p, uid, gid)\n    else\n      throw er\n  }\n\n  if (children && children.length)\n    children.forEach(child => chownrKidSync(p, child, uid, gid))\n\n  return handleEISDirSync(p, uid, gid)\n}\n\nmodule.exports = chownr\nchownr.sync = chownrSync\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY2hvd25yL2Nob3duci5qcyIsIm1hcHBpbmdzIjoiQUFBWTtBQUNaLFdBQVcsbUJBQU8sQ0FBQyxjQUFJO0FBQ3ZCLGFBQWEsbUJBQU8sQ0FBQyxrQkFBTTs7QUFFM0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBLGVBQWUscUJBQXFCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxxQkFBcUI7QUFDckQsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHBvcnRrZXkvbmV4dC1leGFtcGxlLy4vbm9kZV9tb2R1bGVzL2Nob3duci9jaG93bnIuanM/NGNkYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKVxuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuY29uc3QgTENIT1dOID0gZnMubGNob3duID8gJ2xjaG93bicgOiAnY2hvd24nXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuY29uc3QgTENIT1dOU1lOQyA9IGZzLmxjaG93blN5bmMgPyAnbGNob3duU3luYycgOiAnY2hvd25TeW5jJ1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuY29uc3QgbmVlZEVJU0RJUkhhbmRsZWQgPSBmcy5sY2hvd24gJiZcbiAgIXByb2Nlc3MudmVyc2lvbi5tYXRjaCgvdjFbMS05XStcXC4vKSAmJlxuICAhcHJvY2Vzcy52ZXJzaW9uLm1hdGNoKC92MTBcXC5bNi05XS8pXG5cbmNvbnN0IGxjaG93blN5bmMgPSAocGF0aCwgdWlkLCBnaWQpID0+IHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZnNbTENIT1dOU1lOQ10ocGF0aCwgdWlkLCBnaWQpXG4gIH0gY2F0Y2ggKGVyKSB7XG4gICAgaWYgKGVyLmNvZGUgIT09ICdFTk9FTlQnKVxuICAgICAgdGhyb3cgZXJcbiAgfVxufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuY29uc3QgY2hvd25TeW5jID0gKHBhdGgsIHVpZCwgZ2lkKSA9PiB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGZzLmNob3duU3luYyhwYXRoLCB1aWQsIGdpZClcbiAgfSBjYXRjaCAoZXIpIHtcbiAgICBpZiAoZXIuY29kZSAhPT0gJ0VOT0VOVCcpXG4gICAgICB0aHJvdyBlclxuICB9XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5jb25zdCBoYW5kbGVFSVNESVIgPVxuICBuZWVkRUlTRElSSGFuZGxlZCA/IChwYXRoLCB1aWQsIGdpZCwgY2IpID0+IGVyID0+IHtcbiAgICAvLyBOb2RlIHByaW9yIHRvIHYxMCBoYWQgYSB2ZXJ5IHF1ZXN0aW9uYWJsZSBpbXBsZW1lbnRhdGlvbiBvZlxuICAgIC8vIGZzLmxjaG93biwgd2hpY2ggd291bGQgYWx3YXlzIHRyeSB0byBjYWxsIGZzLm9wZW4gb24gYSBkaXJlY3RvcnlcbiAgICAvLyBGYWxsIGJhY2sgdG8gZnMuY2hvd24gaW4gdGhvc2UgY2FzZXMuXG4gICAgaWYgKCFlciB8fCBlci5jb2RlICE9PSAnRUlTRElSJylcbiAgICAgIGNiKGVyKVxuICAgIGVsc2VcbiAgICAgIGZzLmNob3duKHBhdGgsIHVpZCwgZ2lkLCBjYilcbiAgfVxuICA6IChfLCBfXywgX19fLCBjYikgPT4gY2JcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbmNvbnN0IGhhbmRsZUVJU0RpclN5bmMgPVxuICBuZWVkRUlTRElSSGFuZGxlZCA/IChwYXRoLCB1aWQsIGdpZCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gbGNob3duU3luYyhwYXRoLCB1aWQsIGdpZClcbiAgICB9IGNhdGNoIChlcikge1xuICAgICAgaWYgKGVyLmNvZGUgIT09ICdFSVNESVInKVxuICAgICAgICB0aHJvdyBlclxuICAgICAgY2hvd25TeW5jKHBhdGgsIHVpZCwgZ2lkKVxuICAgIH1cbiAgfVxuICA6IChwYXRoLCB1aWQsIGdpZCkgPT4gbGNob3duU3luYyhwYXRoLCB1aWQsIGdpZClcblxuLy8gZnMucmVhZGRpciBjb3VsZCBvbmx5IGFjY2VwdCBhbiBvcHRpb25zIG9iamVjdCBhcyBvZiBub2RlIHY2XG5jb25zdCBub2RlVmVyc2lvbiA9IHByb2Nlc3MudmVyc2lvblxubGV0IHJlYWRkaXIgPSAocGF0aCwgb3B0aW9ucywgY2IpID0+IGZzLnJlYWRkaXIocGF0aCwgb3B0aW9ucywgY2IpXG5sZXQgcmVhZGRpclN5bmMgPSAocGF0aCwgb3B0aW9ucykgPT4gZnMucmVhZGRpclN5bmMocGF0aCwgb3B0aW9ucylcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5pZiAoL152NFxcLi8udGVzdChub2RlVmVyc2lvbikpXG4gIHJlYWRkaXIgPSAocGF0aCwgb3B0aW9ucywgY2IpID0+IGZzLnJlYWRkaXIocGF0aCwgY2IpXG5cbmNvbnN0IGNob3duID0gKGNwYXRoLCB1aWQsIGdpZCwgY2IpID0+IHtcbiAgZnNbTENIT1dOXShjcGF0aCwgdWlkLCBnaWQsIGhhbmRsZUVJU0RJUihjcGF0aCwgdWlkLCBnaWQsIGVyID0+IHtcbiAgICAvLyBTa2lwIEVOT0VOVCBlcnJvclxuICAgIGNiKGVyICYmIGVyLmNvZGUgIT09ICdFTk9FTlQnID8gZXIgOiBudWxsKVxuICB9KSlcbn1cblxuY29uc3QgY2hvd25yS2lkID0gKHAsIGNoaWxkLCB1aWQsIGdpZCwgY2IpID0+IHtcbiAgaWYgKHR5cGVvZiBjaGlsZCA9PT0gJ3N0cmluZycpXG4gICAgcmV0dXJuIGZzLmxzdGF0KHBhdGgucmVzb2x2ZShwLCBjaGlsZCksIChlciwgc3RhdHMpID0+IHtcbiAgICAgIC8vIFNraXAgRU5PRU5UIGVycm9yXG4gICAgICBpZiAoZXIpXG4gICAgICAgIHJldHVybiBjYihlci5jb2RlICE9PSAnRU5PRU5UJyA/IGVyIDogbnVsbClcbiAgICAgIHN0YXRzLm5hbWUgPSBjaGlsZFxuICAgICAgY2hvd25yS2lkKHAsIHN0YXRzLCB1aWQsIGdpZCwgY2IpXG4gICAgfSlcblxuICBpZiAoY2hpbGQuaXNEaXJlY3RvcnkoKSkge1xuICAgIGNob3ducihwYXRoLnJlc29sdmUocCwgY2hpbGQubmFtZSksIHVpZCwgZ2lkLCBlciA9PiB7XG4gICAgICBpZiAoZXIpXG4gICAgICAgIHJldHVybiBjYihlcilcbiAgICAgIGNvbnN0IGNwYXRoID0gcGF0aC5yZXNvbHZlKHAsIGNoaWxkLm5hbWUpXG4gICAgICBjaG93bihjcGF0aCwgdWlkLCBnaWQsIGNiKVxuICAgIH0pXG4gIH0gZWxzZSB7XG4gICAgY29uc3QgY3BhdGggPSBwYXRoLnJlc29sdmUocCwgY2hpbGQubmFtZSlcbiAgICBjaG93bihjcGF0aCwgdWlkLCBnaWQsIGNiKVxuICB9XG59XG5cblxuY29uc3QgY2hvd25yID0gKHAsIHVpZCwgZ2lkLCBjYikgPT4ge1xuICByZWFkZGlyKHAsIHsgd2l0aEZpbGVUeXBlczogdHJ1ZSB9LCAoZXIsIGNoaWxkcmVuKSA9PiB7XG4gICAgLy8gYW55IGVycm9yIG90aGVyIHRoYW4gRU5PVERJUiBvciBFTk9UU1VQIG1lYW5zIGl0J3Mgbm90IHJlYWRhYmxlLFxuICAgIC8vIG9yIGRvZXNuJ3QgZXhpc3QuICBnaXZlIHVwLlxuICAgIGlmIChlcikge1xuICAgICAgaWYgKGVyLmNvZGUgPT09ICdFTk9FTlQnKVxuICAgICAgICByZXR1cm4gY2IoKVxuICAgICAgZWxzZSBpZiAoZXIuY29kZSAhPT0gJ0VOT1RESVInICYmIGVyLmNvZGUgIT09ICdFTk9UU1VQJylcbiAgICAgICAgcmV0dXJuIGNiKGVyKVxuICAgIH1cbiAgICBpZiAoZXIgfHwgIWNoaWxkcmVuLmxlbmd0aClcbiAgICAgIHJldHVybiBjaG93bihwLCB1aWQsIGdpZCwgY2IpXG5cbiAgICBsZXQgbGVuID0gY2hpbGRyZW4ubGVuZ3RoXG4gICAgbGV0IGVyclN0YXRlID0gbnVsbFxuICAgIGNvbnN0IHRoZW4gPSBlciA9PiB7XG4gICAgICBpZiAoZXJyU3RhdGUpXG4gICAgICAgIHJldHVyblxuICAgICAgaWYgKGVyKVxuICAgICAgICByZXR1cm4gY2IoZXJyU3RhdGUgPSBlcilcbiAgICAgIGlmICgtLSBsZW4gPT09IDApXG4gICAgICAgIHJldHVybiBjaG93bihwLCB1aWQsIGdpZCwgY2IpXG4gICAgfVxuXG4gICAgY2hpbGRyZW4uZm9yRWFjaChjaGlsZCA9PiBjaG93bnJLaWQocCwgY2hpbGQsIHVpZCwgZ2lkLCB0aGVuKSlcbiAgfSlcbn1cblxuY29uc3QgY2hvd25yS2lkU3luYyA9IChwLCBjaGlsZCwgdWlkLCBnaWQpID0+IHtcbiAgaWYgKHR5cGVvZiBjaGlsZCA9PT0gJ3N0cmluZycpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3Qgc3RhdHMgPSBmcy5sc3RhdFN5bmMocGF0aC5yZXNvbHZlKHAsIGNoaWxkKSlcbiAgICAgIHN0YXRzLm5hbWUgPSBjaGlsZFxuICAgICAgY2hpbGQgPSBzdGF0c1xuICAgIH0gY2F0Y2ggKGVyKSB7XG4gICAgICBpZiAoZXIuY29kZSA9PT0gJ0VOT0VOVCcpXG4gICAgICAgIHJldHVyblxuICAgICAgZWxzZVxuICAgICAgICB0aHJvdyBlclxuICAgIH1cbiAgfVxuXG4gIGlmIChjaGlsZC5pc0RpcmVjdG9yeSgpKVxuICAgIGNob3duclN5bmMocGF0aC5yZXNvbHZlKHAsIGNoaWxkLm5hbWUpLCB1aWQsIGdpZClcblxuICBoYW5kbGVFSVNEaXJTeW5jKHBhdGgucmVzb2x2ZShwLCBjaGlsZC5uYW1lKSwgdWlkLCBnaWQpXG59XG5cbmNvbnN0IGNob3duclN5bmMgPSAocCwgdWlkLCBnaWQpID0+IHtcbiAgbGV0IGNoaWxkcmVuXG4gIHRyeSB7XG4gICAgY2hpbGRyZW4gPSByZWFkZGlyU3luYyhwLCB7IHdpdGhGaWxlVHlwZXM6IHRydWUgfSlcbiAgfSBjYXRjaCAoZXIpIHtcbiAgICBpZiAoZXIuY29kZSA9PT0gJ0VOT0VOVCcpXG4gICAgICByZXR1cm5cbiAgICBlbHNlIGlmIChlci5jb2RlID09PSAnRU5PVERJUicgfHwgZXIuY29kZSA9PT0gJ0VOT1RTVVAnKVxuICAgICAgcmV0dXJuIGhhbmRsZUVJU0RpclN5bmMocCwgdWlkLCBnaWQpXG4gICAgZWxzZVxuICAgICAgdGhyb3cgZXJcbiAgfVxuXG4gIGlmIChjaGlsZHJlbiAmJiBjaGlsZHJlbi5sZW5ndGgpXG4gICAgY2hpbGRyZW4uZm9yRWFjaChjaGlsZCA9PiBjaG93bnJLaWRTeW5jKHAsIGNoaWxkLCB1aWQsIGdpZCkpXG5cbiAgcmV0dXJuIGhhbmRsZUVJU0RpclN5bmMocCwgdWlkLCBnaWQpXG59XG5cbm1vZHVsZS5leHBvcnRzID0gY2hvd25yXG5jaG93bnIuc3luYyA9IGNob3duclN5bmNcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/chownr/chownr.js\n");

/***/ })

};
;